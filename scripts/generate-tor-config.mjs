#!/usr/bin/env node
/**
 * Generate Tor configuration for Monero node
 * This script creates configuration files without requiring external dependencies
 * 
 * Usage: node scripts/generate-tor-config.mjs [onion-address]
 */

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

function generateTorrcConfig(onionAddress, rpcPort = 18084, p2pPort = 18080) {
  return `# Tor configuration for Monero node
# Generated by generate-tor-config.mjs

# SOCKS proxy for outgoing connections
SOCKSPort 9050

# Hidden service for Monero RPC
HiddenServiceDir /var/lib/tor/monero_rpc/
HiddenServicePort ${rpcPort} 127.0.0.1:${rpcPort}

# Hidden service for Monero P2P (optional)
HiddenServiceDir /var/lib/tor/monero_p2p/
HiddenServicePort ${p2pPort} 127.0.0.1:${p2pPort}

# Security settings
CookieAuthentication 1
ControlPort 9051
`;
}

function generateMonerodConfig(onionAddress, rpcPort = 18084) {
  return `# Monero daemon configuration for Tor
# Generated by generate-tor-config.mjs

# RPC settings
rpc-bind-ip=127.0.0.1
rpc-bind-port=${rpcPort}
confirm-external-bind=1

# Tor proxy settings
tx-proxy=tor,127.0.0.1:9050,disable_noise
anonymous-inbound=${onionAddress}:${rpcPort},127.0.0.1:${rpcPort}

# P2P settings
p2p-bind-ip=127.0.0.1
p2p-bind-port=18080

# Additional privacy settings
no-igd=1
hide-my-port=1
`;
}

function generateEnvTemplate(onionAddress) {
  return `# Monero RPC Configuration
MONERO_RPC_HOST=127.0.0.1
MONERO_RPC_PORT=18084
MONERO_RPC_USERNAME=your_username
MONERO_RPC_PASSWORD=your_password

# Tor Configuration
MONERO_USE_TOR=true
TOR_PROXY_HOST=127.0.0.1
TOR_PROXY_PORT=9050
MONERO_ONION_ADDRESS=${onionAddress}
`;
}

function printInstructions(onionAddress) {
  console.log('\n' + '='.repeat(70));
  console.log('Tor Configuration Files Generated Successfully!');
  console.log('='.repeat(70));
  console.log('\nGenerated files:');
  console.log('  ✓ torrc.conf - Tor configuration');
  console.log('  ✓ monerod.conf - Monero daemon configuration');
  console.log('  ✓ .env.monero - Environment variables template');
  console.log('\nYour onion address:', onionAddress);
  console.log('\nNext steps:');
  console.log('1. Generate onion address with Tor:');
  console.log('   sudo mkdir -p /var/lib/tor/monero_rpc');
  console.log('   sudo chown debian-tor:debian-tor /var/lib/tor/monero_rpc');
  console.log('   sudo chmod 700 /var/lib/tor/monero_rpc');
  console.log('\n2. Add torrc.conf contents to /etc/tor/torrc');
  console.log('\n3. Restart Tor:');
  console.log('   sudo systemctl restart tor');
  console.log('\n4. Get your onion address:');
  console.log('   sudo cat /var/lib/tor/monero_rpc/hostname');
  console.log('\n5. Update monerod.conf with your actual onion address');
  console.log('\n6. Start Monero daemon with the configuration:');
  console.log('   monerod --config-file monerod.conf');
  console.log('\n7. Update your .env file with the values from .env.monero');
  console.log('='.repeat(70) + '\n');
}

function main() {
  const args = process.argv.slice(2);
  let onionAddress = args[0] || 'yourlongv3onionaddress.onion';
  
  // Remove .onion suffix if provided
  onionAddress = onionAddress.replace('.onion', '');
  
  console.log('\nGenerating Tor configuration for Monero...');
  console.log('Onion address:', onionAddress + '.onion');
  
  try {
    // Generate configuration files
    const torrcConfig = generateTorrcConfig(onionAddress);
    const monerodConfig = generateMonerodConfig(onionAddress + '.onion');
    const envTemplate = generateEnvTemplate(onionAddress + '.onion');
    
    // Write files
    fs.writeFileSync('torrc.conf', torrcConfig);
    fs.writeFileSync('monerod.conf', monerodConfig);
    fs.writeFileSync('.env.monero', envTemplate);
    
    printInstructions(onionAddress + '.onion');
    
  } catch (error) {
    console.error('\n✗ Error generating configuration files:', error.message);
    process.exit(1);
  }
}

main();
